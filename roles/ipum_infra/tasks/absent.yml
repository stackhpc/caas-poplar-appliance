# This task list deconfigures partitions, allocations and IPUMs when the Poplar
# Appliance is torn down (terraform_state == absent)

# This is flakey, if allocation_name isn't known it throws an error so we
# check the error condition before trying to execute the following block.
- name: List partitions in our allocation (only)
  ansible.builtin.command:
    cmd: vipu-admin{{vipu_ver}}  -H {{ vipu_servers['default' if '@' in appliance_tenancy else appliance_tenancy]['floating_ip'] }} -P {{ vipu_container_admin_port }} list partitions --allocation {{allocation_name}} --showjson
  register: vipu_partition_out
  ignore_errors: true

- name: Partition removal block
  when: vipu_partition_out.rc == 0
  block:
    - name: Convert partition_out to list
      ansible.builtin.set_fact:
        vipu_partition_list: "{{ vipu_partition_out.stdout | from_json | community.general.json_query('partitions[*].id') | list }}"

    - name: Remove partitions in our allocation
      ansible.builtin.command:
        cmd: vipu-admin{{vipu_ver}} -H {{ vipu_servers['default' if '@' in appliance_tenancy else appliance_tenancy]['floating_ip'] }} -P {{ vipu_container_admin_port }} remove partition {{ part_var }} --force
      loop: "{{ vipu_partition_list if vipu_partition_list else [] }}"
      loop_control:
        loop_var: part_var
      register: partition_remove_out
      when:
        - vipu_partition_list is defined
        - vipu_partition_list is iterable
        # End block

- name: List allocation - the return code shows if the expected alloc exists
  ansible.builtin.command:
    cmd: vipu-admin{{vipu_ver}} -H {{ vipu_servers['default' if '@' in appliance_tenancy else appliance_tenancy]['floating_ip'] }} -P 8091 --showjson get allocation {{allocation_name}}
  register: vipu_alloc_list
  ignore_errors: true

- name: Remove allocation block
  when: vipu_alloc_list.rc == 0
  block:
    - name: List assigned IPUMs cos we need it for the truffle-shuffle
      ansible.builtin.set_fact:
        assigned_ipums_list: "{{ vipu_alloc_list.stdout | from_json | moreati.jq.jq('.allocation.spec.agent_ids') }}"

    - name: Remove allocation
      ansible.builtin.command:
        cmd: vipu-admin{{vipu_ver}} -H {{ vipu_servers['default' if '@' in appliance_tenancy else appliance_tenancy]['floating_ip'] }} -P 8091 remove allocation {{ allocation_name }}
      register: allocation_remove_out

    - name: Copy clouds.yaml file
      ansible.builtin.copy:
        decrypt: yes
        src: "{{playbook_dir}}/files/clouds-{{gc_tenancy | default(gc_cloud)}}.yaml"
        dest: "/etc/openstack/clouds.yaml"
        mode: 0666

    # Remove the IPUMs in assigned_ipums_list from the user's vpod
    - name: Shuffle IPUMs back to staging
      ansible.builtin.include_role:
        name: ipum_infra
        tasks_from: truffleshuffle.yml

    - name: Remove clouds.yaml file so next play runs as the Azimuth user
      ansible.builtin.file:
        state: absent
        path: "/etc/openstack/clouds.yaml"
  # End block cleaning up allocations
